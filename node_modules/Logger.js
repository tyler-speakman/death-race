/*jslint node: true */
/*jshint esnext: true */
/*jslint devel: true */
'use strict';

var util = require('util');

var LEVELS = {
  ALL: 0,
  TRACE: 1,
  DEBUG: 2,
  INFO: 3,
  WARN: 4,
  ERROR: 5,
  FATAL: 6,
  OFF: 7
};

var instances = {};
var instance = function (instanceName) {
  instanceName = instanceName || 'DEFAULT';

  instances[instanceName] = instances[instanceName] || (function () {
    // var level = LEVELS.ALL;

    function debug() {
      if (_this.level <= LEVELS.DEBUG) {
        var args = Array.prototype.slice.call(arguments);
        log.apply(null, args);
      }
    }

    function info() {
      if (_this.level <= LEVELS.INFO) {
        var args = Array.prototype.slice.call(arguments);
        log.apply(null, args);
      }
    }

    function warn() {
      if (_this.level <= LEVELS.WARN) {
        var args = Array.prototype.slice.call(arguments);
        log.apply(null, args);
      }
    }

    function error() {
      if (_this.level <= LEVELS.ERROR) {
        var args = Array.prototype.slice.call(arguments);
        log.apply(null, args);
      }
    }

    function fatal() {
      if (_this.level <= LEVELS.FATAL) {
        var args = Array.prototype.slice.call(arguments);
        log.apply(null, args);
      }
    }

    var _this = {
      LEVELS: LEVELS,
      log: log,
      level: LEVELS.ALL,
      debug: debug,
      info: info,
      warn: warn,
      error: error,
      fatal: fatal
    };

    return _this;

  })();

  return instances[instanceName];
}

function log() {
  var args = appendStandardLogging.apply(null, arguments);
  console.log.apply(null, args);
}

function appendStandardLogging() {
  var args = Array.prototype.slice.call(arguments);
  args[0] = util.format.apply(null, args);
  args.unshift((new Date())
    .toISOString());
  args.unshift(process.pid);

  return args;
}

exports.LEVELS = LEVELS;
exports.instance = instance;
// exports.log = log;
// exports.level = level;
// exports.debug = debug;
// exports.info = info;
// exports.warn = warn;
// exports.error = error;
// exports.fatal = fatal;
